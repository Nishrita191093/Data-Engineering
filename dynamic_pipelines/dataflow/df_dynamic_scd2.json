{
	"name": "df_dynamic_scd2",
	"properties": {
		"folder": {
			"name": "df_Nishrita"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "Src"
				},
				{
					"name": "tgtsrc"
				}
			],
			"sinks": [
				{
					"name": "TgtUpsert"
				},
				{
					"name": "TgtUpdate"
				}
			],
			"transformations": [
				{
					"name": "retaildataselect"
				},
				{
					"name": "SrcHashed"
				},
				{
					"name": "filterActv"
				},
				{
					"name": "TgtHashed"
				},
				{
					"name": "existInsert"
				},
				{
					"name": "addStaticColumns"
				},
				{
					"name": "InsertNew"
				},
				{
					"name": "existtarget"
				},
				{
					"name": "addStaticColumns1",
					"description": "Creating/updating the columns 'TGT_PK_COLUMN, TGT_INSERT_TIME, end_date, current_flag'"
				},
				{
					"name": "UpdateExisting"
				},
				{
					"name": "pkexist"
				}
			],
			"scriptLines": [
				"parameters{",
				"     type1_pk_column as string,",
				"     source_table_name as string,",
				"     current_flag as string,",
				"     insert_time_column_name as string,",
				"     all_columns as string",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true) ~> Src",
				"source(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true) ~> tgtsrc",
				"Src select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> retaildataselect",
				"retaildataselect derive(Hash = md5(\r",
				"    concat(\r",
				"        coalesce(toString(byName(split($all_columns, ',')[0])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[1])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[2])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[3])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[4])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[5])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[6])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[7])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[8])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[9])), '')\r",
				"    )\r",
				"),",
				"          SRC_PK_COLUMN = toString(byName(($type1_pk_column))),",
				"          SRC_INSERT_TIME = toString(byName(($insert_time_column_name)))) ~> SrcHashed",
				"tgtsrc filter(toString(byName(($current_flag)))=='Y') ~> filterActv",
				"filterActv derive(Hash = md5(\r",
				"    concat(\r",
				"        coalesce(toString(byName(split($all_columns, ',')[0])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[1])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[2])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[3])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[4])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[5])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[6])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[7])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[8])), ''), '|',\r",
				"        coalesce(toString(byName(split($all_columns, ',')[9])), '')\r",
				"    )\r",
				"),",
				"          TGT_PK_COLUMN = toString(byName(($type1_pk_column))),",
				"          TGT_INSERT_TIME = toString(byName(($insert_time_column_name)))) ~> TgtHashed",
				"SrcHashed, TgtHashed exists(SRC_PK_COLUMN==TGT_PK_COLUMN && SRC_INSERT_TIME==TGT_INSERT_TIME,",
				"     negate:true,",
				"     broadcast: 'left')~> existInsert",
				"existInsert derive(start_date = currentTimestamp(),",
				"          end_date = toTimestamp('9999-12-31', 'yyyy-MM-dd'),",
				"          current_flag = 'Y') ~> addStaticColumns",
				"addStaticColumns alterRow(insertIf(true())) ~> InsertNew",
				"pkexist, SrcHashed exists(TgtHashed@Hash !=SrcHashed@Hash,",
				"     negate:false,",
				"     broadcast: 'left')~> existtarget",
				"existtarget derive(end_date = currentTimestamp(),",
				"          current_flag = 'N') ~> addStaticColumns1",
				"addStaticColumns1 alterRow(updateIf(true())) ~> UpdateExisting",
				"TgtHashed, SrcHashed exists(SRC_PK_COLUMN==TGT_PK_COLUMN,",
				"     negate:false,",
				"     broadcast: 'left')~> pkexist",
				"InsertNew sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> TgtUpsert",
				"UpdateExisting sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> TgtUpdate"
			]
		}
	}
}