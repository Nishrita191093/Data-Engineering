{
	"name": "df_task5",
	"properties": {
		"folder": {
			"name": "df_Nishrita/df_tasks"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "task5_salescsv",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "task2_jsonfile",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "task5_tgt",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          sale_id as string,",
				"          product_id as string,",
				"          product_name as string,",
				"          quantity as string,",
				"          sale_amount as string,",
				"          sale_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          order_id as integer,",
				"          product as string,",
				"          price as decimal(0,0),",
				"          quantity as integer,",
				"          region as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          product_id,",
				"          product_name,",
				"          price = sale_amount",
				"     )) ~> sink1"
			]
		}
	}
}