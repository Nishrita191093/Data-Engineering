{
	"name": "retail_scd_type_1_incremental_load",
	"properties": {
		"activities": [
			{
				"name": "List source Table_name",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "SELECT 'retail_schema' as table_schema,source_table as table_name,incremental_column_name,load_type \nFROM retail_schema.master_table;",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Source_Table_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For each Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "List source Table_name",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('List source Table_name').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "for_incremental_load",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "SELECT * FROM \n    @{item().table_schema}.@{item().table_name} s\nWHERE \n    s.@{item().incremental_column_name} > (\n        SELECT \n            COALESCE(MAX(LastProcessedTimestamp), '1900-01-01') \n        FROM \n            retail_schema.JobControlTable \n        WHERE \n            TableName = '@{item().table_name}'\n    );\n",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"preCopyScript": {
										"value": "-- Insert the initial log entry into the Job Control Table before starting the data load.\nINSERT INTO retail_schema.JobControlTable (\n    TableName, \n    LastProcessedTimestamp, \n    Status, \n    StartTime, \n    EndTime, \n    ErrorMessage\n)\nVALUES (\n    '@{item().table_name}',    --Table name from the iteration\n    NULL,                                                -- LastProcessedTimestamp will be NULL at the start\n    'InProgress',                                        -- Status: \"InProgress\" while the load is running\n    CURRENT_TIMESTAMP,                                   -- Start time of the process\n    NULL,                                                -- End time is NULL at the start\n    NULL                                                 -- ErrorMessage is NULL initially\n);\n",
										"type": "Expression"
									},
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Retail_source",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Retail_target",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@concat('target_',item().table_name )",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().table_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Success_incremental_load",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "for_incremental_load",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"preCopyScript": {
										"value": "UPDATE retail_schema.JobControlTable\nSET \n    Status = 'Success',\n    EndTime = CURRENT_TIMESTAMP,\n    ErrorMessage = NULL,\n    LastProcessedTimestamp = (\n        SELECT MAX(@{item().incremental_column_name})\n        FROM @{item().table_schema}.@{item().table_name}\n    )\nWHERE TableName = '@{item().table_name}' \n  AND Status = 'InProgress';\n\n",
										"type": "Expression"
									},
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "retail_audit_table",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "retail_audit_table",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Failure_incremental_load",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "for_incremental_load",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"preCopyScript": {
										"value": "UPDATE retail_schema.JobControlTable\nSET \n    Status = 'Failed',\n    EndTime = CURRENT_TIMESTAMP,\n    ErrorMessage = '@{replace(activity('for_incremental_load').output.errors[0].Message,'''','')}',  -- Reference the error message dynamically\n    LastProcessedTimestamp = (\n        SELECT MAX(@{item().incremental_column_name})\n        FROM @{item().table_schema}.@{item().table_name}\n    )\nWHERE TableName = '@{item().table_name}' \n  AND Status = 'InProgress';\n",
										"type": "Expression"
									},
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "audit_table_db",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "audit_table_db",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "scd_type_1_loading",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "SELECT * \nFROM @{item().table_schema}.@{item().table_name} s\nWHERE s.@{item().incremental_column_name} > (\n        SELECT COALESCE(MAX(LastProcessedTimestamp), '1900-01-01') \n        FROM retail_schema.JobControlTable \n        WHERE TableName = '@{item().table_name}'\n    )\nAND EXISTS (\n    SELECT 1\n    FROM retail_schema.master_table mt\n    WHERE mt.source_table = '@{item().table_name}'\n      AND mt.load_type = 'scd_type_1'\n);\n",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"preCopyScript": {
										"value": "-- Insert the initial log entry into the Job Control Table before starting the data load.\nINSERT INTO retail_schema.JobControlTable (\n    TableName, \n    LastProcessedTimestamp, \n    Status, \n    StartTime, \n    EndTime, \n    ErrorMessage\n)\nVALUES (\n    '@{item().table_name}',    --Table name from the iteration\n    NULL,                                                -- LastProcessedTimestamp will be NULL at the start\n    'InProgress',                                        -- Status: \"InProgress\" while the load is running\n    CURRENT_TIMESTAMP,                                   -- Start time of the process\n    NULL,                                                -- End time is NULL at the start\n    NULL                                                 -- ErrorMessage is NULL initially\n);\n",
										"type": "Expression"
									},
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Retail_source",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Retail_target",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@concat('target_',item().table_name )",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().table_schema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Success_ScdType1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "scd_type_1_loading",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"preCopyScript": {
										"value": "UPDATE retail_schema.JobControlTable\nSET \n    Status = 'Success',\n    EndTime = CURRENT_TIMESTAMP,\n    ErrorMessage = NULL,\n    LastProcessedTimestamp = (\n        SELECT MAX(@{item().incremental_column_name})\n        FROM @{item().table_schema}.@{item().table_name}\n    )\nWHERE TableName = '@{item().table_name}' \n  AND Status = 'InProgress';\n\n",
										"type": "Expression"
									},
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "retail_audit_table",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "retail_audit_table",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Failure_ScdType1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "scd_type_1_loading",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"preCopyScript": {
										"value": "UPDATE retail_schema.JobControlTable\nSET \n    Status = 'Failed',\n    EndTime = CURRENT_TIMESTAMP,\n    ErrorMessage = '@{replace(activity('scd_type_1_loading').output.errors[0].Message,'''','')}',  -- Reference the error message dynamically\n    LastProcessedTimestamp = (\n        SELECT MAX(@{item().incremental_column_name})\n        FROM @{item().table_schema}.@{item().table_name}\n    )\nWHERE TableName = '@{item().table_name}' \n  AND Status = 'InProgress';\n",
										"type": "Expression"
									},
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "audit_table_db",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "audit_table_db",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"folder": {
			"name": "pl_Nishrita"
		},
		"annotations": [],
		"lastPublishTime": "2025-03-18T04:25:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}